[{"C:\\School Source\\TodoApp2021\\todo-app\\src\\index.js":"1","C:\\School Source\\TodoApp2021\\todo-app\\src\\App.js":"2","C:\\School Source\\TodoApp2021\\todo-app\\src\\reportWebVitals.js":"3","C:\\School Source\\TodoApp2021\\todo-app\\src\\Nav.js":"4","C:\\School Source\\TodoApp2021\\todo-app\\src\\About\\About.js":"5","C:\\School Source\\TodoApp2021\\todo-app\\src\\Todos\\Todos.js":"6","C:\\School Source\\TodoApp2021\\todo-app\\src\\Contacts\\Contact.js":"7","C:\\School Source\\TodoApp2021\\todo-app\\src\\Contacts\\ContactList.js":"8","C:\\School Source\\TodoApp2021\\todo-app\\src\\Todos\\TodoItem.js":"9","C:\\School Source\\TodoApp2021\\todo-app\\src\\Todos\\TabItem.js":"10"},{"size":500,"mtime":1611194004000,"results":"11","hashOfConfig":"12"},{"size":861,"mtime":1611726660209,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1227,"mtime":1611583896000,"results":"15","hashOfConfig":"12"},{"size":821,"mtime":1611727842765,"results":"16","hashOfConfig":"12"},{"size":3192,"mtime":1611530320000,"results":"17","hashOfConfig":"12"},{"size":2624,"mtime":1611583820000,"results":"18","hashOfConfig":"12"},{"size":550,"mtime":1611583868000,"results":"19","hashOfConfig":"12"},{"size":620,"mtime":1611583742000,"results":"20","hashOfConfig":"12"},{"size":207,"mtime":1611530764000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2rl8wp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\School Source\\TodoApp2021\\todo-app\\src\\index.js",[],["46","47"],"C:\\School Source\\TodoApp2021\\todo-app\\src\\App.js",[],"C:\\School Source\\TodoApp2021\\todo-app\\src\\reportWebVitals.js",[],"C:\\School Source\\TodoApp2021\\todo-app\\src\\Nav.js",[],"C:\\School Source\\TodoApp2021\\todo-app\\src\\About\\About.js",[],"C:\\School Source\\TodoApp2021\\todo-app\\src\\Todos\\Todos.js",["48","49"],"import React , { useState } from 'react';\nimport { Tabs} from \"antd\";\nimport TodoItem from \"./TodoItem\";\nimport TabItem from \"./TabItem\";\nimport './Todos.css';\n\n\nconst { TabPane } = Tabs;\n\n\nfunction Todos() {\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = text => {\n      const newTodos = [...todos, { text }];\n      setTodos(newTodos);\n    };\n  \n    const completeTodo = index => {\n      const newTodos = [...todos];\n      newTodos[index].isCompleted = true;\n      setTodos(newTodos);\n    };\n  \n    const removeTodo = index => {\n      const newTodos = [...todos];\n      newTodos.splice(index, 1);\n      setTodos(newTodos);\n    };\n  \n    return (\n      <div className=\"'p-5 border m-5 md:m-12 lg:m-20'\">\n        <div className=\"todo-list\">\n          {todos.map((todo, index) => (\n            <TodoItem\n              key={index}\n              index={index}\n              todo={todo}\n              completeTodo={completeTodo}\n              removeTodo={removeTodo}\n            />\n          ))}\n          <TodoForm addTodo={addTodo} />\n        </div>\n        <div className={'mt-5'}>&nbsp;</div>\n        <div>\n              <Tabs defaultActiveKey=\"1\" type={'card'}>\n                <TabPane tab=\"All\" key=\"1\">\n                     <div className={'bg-gray-100 mt-5 p-5'}>\n                         <ul>\n                             {todos.map((todo, tab) => {\n                                 return <TabItem todo={todo}/>\n                             })}\n                         </ul>\n                     </div>\n                 </TabPane>\n                 <TabPane tab=\"Active\" key=\"2\">\n                 <div className={'bg-gray-100 mt-5 p-5'}>\n                         <ul>\n                         {todos.map((todo, tab) => {\n                                if(!todo.isCompleted)\n                                {\n                                 return <TabItem todo={todo}/>\n                                }\n                             })}\n                         </ul>\n                 </div>\n                 </TabPane>\n                 <TabPane tab=\"Completed\" key=\"3\">\n                 <div className={'bg-gray-100 mt-5 p-5'}>\n                         <ul>\n                         {todos.map((todo, tab) => {\n                                if(todo.isCompleted)\n                                {\n                                return <TabItem todo={todo}/>\n                                }\n                             })}\n                         </ul>\n                 </div>\n                 </TabPane>\n             </Tabs>\n        </div>\n      </div>\n      \n    );\n  }\n\n//////////////////////////////////////////////////This is the form text box for the task\nfunction TodoForm({ addTodo }) {\n    const [value, setValue] = useState(\"\");\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      if (!value) return;\n      addTodo(value);\n      setValue(\"\");\n    };\n  \n    return (\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n          placeholder={'Task...'}\n        />\n      </form>\n    );\n  }\n\nexport default Todos;","C:\\School Source\\TodoApp2021\\todo-app\\src\\Contacts\\Contact.js",["50","51"],"import React , { useState } from 'react';\nimport { Form, Input , Button , Tabs } from \"antd\";\nimport ContactItem from \"./ContactList.js\";\n\nconst { TabPane } = Tabs;\n\nfunction Contacts(props) {\n\n    const [contacts, setContacts] = useState([]);\n\n    //Form Functions\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n      };\n      \n      const validateMessages = {\n        required: '${label} is required!',\n        types: {\n          email: '${label} is not a valid email!'\n        }\n      };\n\n      const onFinish = (e) => {\n        setContacts(contacts => [...contacts,e.user]);\n      };\n\n    return (\n        <div className={'p-5 border m-5 md:m-12 lg:m-20'}>\n\n                <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                    <Form.Item name={['user', 'firstname']} label=\"First Name\" rules={[{ required: true }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name={['user', 'lastname']} label=\"Last Name\" rules={[{ required: true }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name={['user', 'email']} label=\"Email\" rules={[{ type: 'email' }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name={['user', 'comments']} label=\"Comments\">\n                        <Input.TextArea />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div>\n                    <Tabs defaultActiveKey=\"1\" type={'card'}>\n                        <TabPane tab=\"Contacts\" key=\"1\">\n                            <body class=\"font-sans container\">\n                                <div class=\"w-full md:w-3/5 mx-auto p-8\">\n                                    <div className={'bg-gray-100 mt-5 p-5'}>\n                                            {contacts.map((contact, index) => {\n                                                return <ContactItem contact={contact} index={index}/>\n                                            })}\n                                    </div>\n                                </div>                       \n                            </body>           \n                        </TabPane>\n                    </Tabs>\n                 </div>\n        </div>\n    );\n}\n\nexport default Contacts;","C:\\School Source\\TodoApp2021\\todo-app\\src\\Contacts\\ContactList.js",[],"C:\\School Source\\TodoApp2021\\todo-app\\src\\Todos\\TodoItem.js",[],"C:\\School Source\\TodoApp2021\\todo-app\\src\\Todos\\TabItem.js",["52"],"import React, {useState} from 'react';\r\n\r\nfunction TabItem({ todo}) {\r\n\r\n    return (\r\n      <div\r\n        className=\"todo\"\r\n      >\r\n        {todo.text}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default TabItem;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":60,"column":49,"nodeType":"59","messageId":"60","endLine":60,"endColumn":51},{"ruleId":"57","severity":1,"message":"58","line":72,"column":49,"nodeType":"59","messageId":"60","endLine":72,"endColumn":51},{"ruleId":"61","severity":1,"message":"62","line":18,"column":19,"nodeType":"63","messageId":"64","endLine":18,"endColumn":42},{"ruleId":"61","severity":1,"message":"62","line":20,"column":18,"nodeType":"63","messageId":"64","endLine":20,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":1,"column":16,"nodeType":"67","messageId":"68","endLine":1,"endColumn":24},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]